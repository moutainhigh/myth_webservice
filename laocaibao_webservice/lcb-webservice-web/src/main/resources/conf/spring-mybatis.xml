<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="dataSource" class="com.zdmoney.common.db.Log4jdbcDruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName">
            <value>${jdbc.driverClassName}</value>
        </property>
        <property name="url">
            <value>${jdbc.url}</value>
        </property>
        <property name="username">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        <!-- 连接池最大使用连接数 -->
        <property name="maxActive">
            <value>${maxActive}</value>
        </property>
        <!-- 初始化连接大小 -->
        <property name="initialSize">
            <value>${initialSize}</value>
        </property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait">
            <value>${maxWait}</value>
        </property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle">
            <value>${minIdle}</value>
        </property>
        <!-- 自动清除无用连接 -->
        <property name="removeAbandoned">
            <value>${removeAbandoned}</value>
        </property>
        <!-- 清除无用连接的等待时间 -->
        <property name="removeAbandonedTimeout">
            <value>${removeAbandonedTimeout}</value>
        </property>
        <!-- 连接属性 -->
        <property name="connectionProperties">
            <value>${connectionProperties}</value>
        </property>

        <property name="timeBetweenEvictionRunsMillis" value="5000" />

        <property name="validationQuery" value="SELECT 1 from dual" />

        <property name="filters" value="stat" />
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter" />
                <ref bean="log-filter" />
            </list>
        </property>
    </bean>

    <!-- 慢SQL记录-->
    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="mergeSql" value="true" />
        <property name="slowSqlMillis" value="10000" />
        <property name="logSlowSql" value="true" />
    </bean>

    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
        <!-- <property name="resultSetLogEnabled" value="false" /> -->
        <!-- <property name="statementExecutableSqlLogEnable" value="true" /> -->
    </bean>

    <!-- 配置druid监控spring jdbc -->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor" />

    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:configLocation="classpath:conf/mybatis-config.xml"
          p:mapperLocations="classpath*:mapper/**/*.xml">
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <!-- 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 -->
                    <property name="properties">
                        <value>
                            dialect=oracle
                            <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
                            <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
                            <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
                            reasonable=true
                            <!-- 支持通过Mapper接口参数来传递分页参数 -->
                            supportMethodsArguments=true
                            <!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->
                            returnPageInfo=check
                            <!-- 自定义参数名 -->
                            <!--params=count=countSql-->
                        </value>
                    </property>
                </bean>
            </array>
        </property>

    </bean>
    <!-- configLocation为mybatis属性 mapperLocations为所有mapper-->

    <!-- spring与mybatis整合配置，扫描所有dao -->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
    <!--<property name="basePackage" value="com.zdmoney.mapper"/>-->
    <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
    <!--</bean>-->

    <!-- 对数据源进行事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zdmoney.mapper"/>
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
        <!-- 3.2.2版本新特性，markerInterface可以起到mappers配置的作用，详细情况需要看Marker接口类 -->
        <!--<property name="markerInterface" value="com.zdmoney.common.mybatis.mapper.JdMapper"/>-->
        <property name="properties">
            <value>
                ORDER=BEFORE
                mappers=tk.mybatis.mapper.common.Mapper
            </value>
        </property>
    </bean>
</beans>